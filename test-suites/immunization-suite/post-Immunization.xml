<testcase id="post-Immunization" xmlns="http://www.gitb.com/tdl/v1/"
          xmlns:gitb="http://www.gitb.com/core/v1/"
>
    <metadata>
        <gitb:name>Test case 1,3: Submit an Immunization</gitb:name>
        <gitb:version>1.0</gitb:version>
        <gitb:description>The FHIR client submits a specific Immunization to a FHIR server.</gitb:description>
        <!-- See here how we refer to a HTML block that will be added as documentation for the test case. -->
        <!--        <gitb:documentation import="docs/client/test-case-1.html"/>-->
    </metadata>
    <actors>
        <!--
            The Actor IDs need to match those in the test suite and in the test engine. One of these needs to always be the SUT (System Under Test).
        -->
        <gitb:actor id="client" role="SUT"/>
        <gitb:actor id="server"/>
    </actors>
    <variables>
        <!--
            The ProxyHandler will forward the request to the test cases.
        -->
        <var name="request" type="map"/>
    </variables>
    <!--
        Setting "stopOnError" to true will stop the test session as soon as an error is encountered. By default, test sessions will continue regardless of errors.
    -->
    <steps stopOnError="false">
        <log>'Started session '||$SESSION{sessionId}||' for test case
            '||$SESSION{testCaseId}||''
        </log>
        <!-- Log the received request parameters -->
        <log>"### Proxy Request Data ###"</log>
        <log>$request</log>
        <log>
            "Request URI: " || $request{uri}
        </log>
        <log>
            "Request Method: " || $request{method}
        </log>
        <log>
            "Request Headers: " || $request{headers}
        </log>
        <log>
            "Request Body: " || $request{body}
        </log>

        <!-- Extract json properties and verify expected values for them... -->

        <process handler="JSONPointerProcessor" output="resourceType">
            <input name="content">$request{body}</input>
            <input name="pointer">"/resourceType"</input>
        </process>

        <verify handler="StringValidator" desc="Verify Resource Type">
            <input name="actualstring">$resourceType</input>
            <input name="expectedstring">"Immunization"</input>
        </verify>

        <process handler="JSONPointerProcessor" output="immunizationCode">
            <input name="content">$request{body}</input>
            <input name="pointer">"/vaccineCode/coding/0/code"</input>
        </process>

        <if title="Diphtheria Immunization" desc="Scenario 1 - Write diphtheria immunization">
            <cond>$immunizationCode = '871729003'</cond>
            <then>
                <assign to="diphtheriaImmunizationCode">"871729003"</assign>
                <verify handler="StringValidator" desc="Verify diphtheria vaccine code">
                    <input name="actualstring">$immunizationCode</input>
                    <input name="expectedstring">$diphtheriaImmunizationCode</input>
                </verify>

                <process handler="JSONPointerProcessor" output="administrationRoute">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/route/coding/0/code"</input>
                </process>

                <verify handler="StringValidator" desc="Verify administration route">
                    <input name="actualstring">$administrationRoute</input>
                    <input name="expectedstring">"IV"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="extension">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/extension"</input>
                </process>

                <log>"the object: " || $extension</log>

                <!-- Create your regexp lookup (this could also be done for example in a scriplet, called as a function for different fields) -->
                <assign to="fieldToCheck">"code"</assign>
                <assign to="expression">'"url"[\s]:[\s]+".+\/be-ext-administeredProduct"[,\s"\w:\[{\/\.\-}\]]+"' || $fieldToCheck || '"[\s]:[\s]+"(.+)"'</assign>
                <!-- Use the regexp to extract the field value -->
                <process handler="RegExpProcessor" output="field1">
                    <operation>collect</operation>
                    <input name="input">$extension</input>
                    <input name="expression">$expression</input>
                </process>
                <!-- Check its value (you could use several types of validators for this) -->
                <verify handler="ExpressionValidator" desc="Validate administered product">
                    <input name="expression">$field1 = 'J07AF01'</input>
                </verify>

                <process handler="JSONPointerProcessor" output="location">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/contained"</input>
                </process>

                <log>"the object: " || $extension</log>

                <verify handler="RegExpValidator" desc="Verify location">
                    <input name="input">$extension</input>
                    <input name="expression">'"country"\s*:\s"BE"'</input>
                </verify>

                <process handler="JSONPointerProcessor" output="status">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/status"</input>
                </process>

                <verify handler="StringValidator" desc="Verify status">
                    <input name="actualstring">$status</input>
                    <input name="expectedstring">"completed"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="doseQuantity">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/doseQuantity/value"</input>
                </process>

                <verify handler="StringValidator" desc="Verify dose quantity">
                    <input name="actualstring">$doseQuantity</input>
                    <input name="expectedstring">"1"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="bodySite">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/site/coding/0/code"</input>
                </process>

                <verify handler="StringValidator" desc="Verify body site">
                    <input name="actualstring">$bodySite</input>
                    <input name="expectedstring">"5742000"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="reasonCode">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/reasonCode/0/coding/0/code"</input>
                </process>

                <verify handler="StringValidator" desc="Verify reason code">
                    <input name="actualstring">$reasonCode</input>
                    <input name="expectedstring">"409516001"</input>
                </verify>
            </then>
        </if>

        <if title="Human Papillomavirus Immunization" desc="Scenario 3 - Write Human Papillomavirus immunization, Free vaccine containing a stock location">
            <cond>$immunizationCode = '911000221103'</cond>
            <then>
                <assign to="diphtheriaImmunizationCode">"911000221103"</assign>
                <verify handler="StringValidator" desc="Verify Human Papillomavirus vaccine code">
                    <input name="actualstring">$immunizationCode</input>
                    <input name="expectedstring">$diphtheriaImmunizationCode</input>
                </verify>

                <process handler="JSONPointerProcessor" output="administrationRoute">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/route/coding/0/code"</input>
                </process>

                <verify handler="StringValidator" desc="Verify administration route">
                    <input name="actualstring">$administrationRoute</input>
                    <input name="expectedstring">"IM"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="extension">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/extension"</input>
                </process>

                <log>"the object: " || $extension</log>

                <verify handler="RegExpValidator" desc="Verify administered product code">
                    <input name="input">$extension</input>
                    <input name="expression">'"code"\s*:\s"3402799"'</input>
                </verify>

                <process handler="JSONPointerProcessor" output="location">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/contained"</input>
                </process>

                <log>"the object: " || $extension</log>

                <verify handler="RegExpValidator" desc="Verify location">
                    <input name="input">$extension</input>
                    <input name="expression">'"country"\s*:\s"BE"'</input>
                </verify>

                <verify handler="RegExpValidator" desc="Verify lot number">
                    <input name="input">$extension</input>
                    <input name="expression">'"valueString"\s*:\s"X026533"'</input>
                </verify>

                <process handler="JSONPointerProcessor" output="status">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/status"</input>
                </process>

                <verify handler="StringValidator" desc="Verify status">
                    <input name="actualstring">$status</input>
                    <input name="expectedstring">"completed"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="doseQuantity">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/doseQuantity/value"</input>
                </process>

                <verify handler="StringValidator" desc="Verify dose quantity">
                    <input name="actualstring">$doseQuantity</input>
                    <input name="expectedstring">"1"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="bodySite">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/site/coding/0/code"</input>
                </process>

                <verify handler="StringValidator" desc="Verify body site">
                    <input name="actualstring">$bodySite</input>
                    <input name="expectedstring">"371309009"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="reasonCode">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/reasonCode/0/coding/0/code"</input>
                </process>

                <verify handler="StringValidator" desc="Verify reason code">
                    <input name="actualstring">$reasonCode</input>
                    <input name="expectedstring">"1137457009"</input>
                </verify>

                <process handler="JSONPointerProcessor" output="stockLocation">
                    <input name="content">$request{body}</input>
                    <input name="pointer">"/extension"</input>
                </process>

                <log>"the object: " || $stockLocation</log>

                <verify handler="RegExpValidator" desc="Verify stock location">
                    <input name="input">$stockLocation</input>
                    <input name="expression">'OV_AgODi-114371-114371003"'</input>
                </verify>
            </then>
        </if>

        <!-- Use handler="$DOMAIN{proxyHandler}" to trigger the Proxied request and get the response. -->
        <send id="proxyRequest" handler="$DOMAIN{proxyHandler}" from="client" to="server"/>
        <log>"### Proxy Response Data ###"</log>
        <log>$proxyRequest{response}</log>
        <log>
            "Proxy Response status: " || $proxyRequest{response}{status}
        </log>
        <log>
            "Proxy Response headers: " || $proxyRequest{response}{headers}
        </log>
        <log>
            "Proxy Response body: " || $proxyRequest{response}{body}
        </log>

        <!-- Validate Status Code -->
        <verify handler="StringValidator" desc="Verify response status code">
            <input name="actualstring">$proxyRequest{response}{status}</input>
            <input name="expectedstring">"201 CREATED"</input>
        </verify>

        <process handler="JSONPointerProcessor" output="resourceType">
            <input name="content">$proxyRequest{response}{body}</input>
            <input name="pointer">"/resourceType"</input>
        </process>

        <verify handler="StringValidator" desc="Verify Response Resource Type">
            <input name="actualstring">$resourceType</input>
            <input name="expectedstring">"Immunization"</input>
        </verify>

        <!-- Use the HttpMessagingV2 handler to send ordinary HTTP requests. -->
        <send id="httpSend" from="client" to="server" handler="HttpMessagingV2">
            <input name="uri">
                "https://echo.free.beeceptor.com/"
            </input>
            <input name="method">"GET"</input>
        </send>
        <log>"### HttpMessagingV2 ###"</log>
        <log>$httpSend{response}</log>
    </steps>
    <!-- The output section allows us to define specialised summary error (or success) messages to make the result more user-friendly. -->
    <output>
        <success>
            <default>"Test case passed successfully."</default>
        </success>
        <failure>
            <default>"Test case failed."</default>
        </failure>
    </output>
</testcase>
