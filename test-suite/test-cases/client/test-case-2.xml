<testcase id="tc-karate-001" xmlns="http://www.gitb.com/tdl/v1/" xmlns:gitb="http://www.gitb.com/core/v1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <metadata>
        <gitb:name>test case: karate Runner Demo</gitb:name>
        <gitb:version>1.0</gitb:version>
        <gitb:description>The test calls the Karate runner to test agaist the features in the configured feature folder.</gitb:description>
        <!-- See here how we refer to a HTML block that will be added as documentation for the test case. -->
        <!-- <gitb:documentation import="docs/client/test-karate-1.html"/> -->
    </metadata>
    <actors>
        <!--
            The Actor IDs need to match those in the test suite and in the test engine. One of these needs to always be the SUT (System Under Test).
        -->
        <gitb:actor id="client" role="SUT"/>
        <gitb:actor id="server"/>
    </actors>
    <!-- 
        Setting "stopOnError" to true will stop the test session as soon as an error is encountered. By default test sessions will continue regardless of errors.
    -->    
    <steps stopOnError="true">

        <!-- 
            Groups add a nice visual separation in test cases but don't affect execution in any way. It can be interesting however to use a group in case you want to
            check for any failures within the group's contained steps (e.g. in the "output" section later on).
        -->
           
            <process desc="pseudonymisation process for patient" output="karateResults" handler="$DOMAIN{processingServiceAddress}" operation="karate">
                <input name="configFilePath">"resources/karate"</input>
            </process>
      <log>"Detalied Test Result"</log>
      <log>$karateResults{resultDetails}</log>


       <verify id="checkKarateTest" desc="Verify if all Karate Test passed" handler="StringValidator">
    <input name="actualstring">$karateResults{result}</input>
    <input name="expectedstring">"true"</input>
  </verify>

    </steps>
    <!-- The output section allows us to define specialised summary error (or success) messages to make the result more user-friendly. -->
    <output>
        <success>
            <default>"Test case completed successfully."</default>
        </success>
        <failure>
            <case>
                <cond>$STEP_STATUS{checkKarateTest} = 'ERROR'</cond>
                <message>"Not All test karate are passed, as detaled in the log"</message>
            </case>
            <!-- If no specific case is matched print a default message. -->
            <default>"Test case failed. Please check the failed step's report for more information and the test log."</default>
        </failure>
    </output>    
</testcase>
